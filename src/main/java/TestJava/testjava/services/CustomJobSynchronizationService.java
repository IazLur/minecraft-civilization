package TestJava.testjava.services;

import TestJava.testjava.TestJava;
import TestJava.testjava.models.VillagerModel;
import TestJava.testjava.repositories.VillagerRepository;
import org.bukkit.Bukkit;
import org.bukkit.entity.Villager;

import java.util.Collection;

/**
 * Service pour synchroniser l'√©tat des m√©tiers custom au d√©marrage du serveur
 */
public class CustomJobSynchronizationService {

    /**
     * Synchronise tous les employ√©s custom au d√©marrage du serveur
     * - √âquipe automatiquement les armures de cuir
     * - V√©rifie la coh√©rence des donn√©es
     */
    public static void synchronizeCustomJobsOnStartup() {
        Bukkit.getLogger().info("[CustomJobSync] Synchronisation des m√©tiers custom au d√©marrage...");
        
        try {
            Collection<VillagerModel> allVillagers = VillagerRepository.getAll();
            int customJobVillagers = 0;
            int armorEquipped = 0;
            int orphansRemoved = 0;

            for (VillagerModel villager : allVillagers) {
                if (!villager.hasCustomJob()) {
                    continue;
                }

                customJobVillagers++;

                try {
                    // R√©cup√©rer l'entit√© villageois du monde
                    Villager entity = (Villager) TestJava.plugin.getServer().getEntity(villager.getId());
                    if (entity == null) {
                        // Villageois fant√¥me : nettoyer le m√©tier custom
                        villager.clearJob();
                        VillagerRepository.update(villager);
                        orphansRemoved++;
                        Bukkit.getLogger().warning("[CustomJobSync] Villageois fant√¥me nettoy√©: " + villager.getId());
                        continue;
                    }

                    // √âquiper l'armure si n√©cessaire
                    if (!CustomJobArmorService.isWearingLeatherArmor(entity)) {
                        CustomJobArmorService.equipLeatherArmor(entity);
                        villager.setHasLeatherArmor(true);
                        VillagerRepository.update(villager);
                        armorEquipped++;
                        
                        Bukkit.getLogger().info("[CustomJobSync] Armure √©quip√©e pour employ√© " + villager.getCurrentJobName() + 
                                               " (villageois: " + villager.getId() + ")");
                    }

                } catch (Exception e) {
                    Bukkit.getLogger().warning("[CustomJobSync] Erreur synchronisation villageois " + villager.getId() + ": " + e.getMessage());
                }
            }

            // Rapport de synchronisation
            Bukkit.getLogger().info("[CustomJobSync] ‚úÖ Synchronisation termin√©e:");
            Bukkit.getLogger().info("[CustomJobSync]   - Employ√©s custom trouv√©s: " + customJobVillagers);
            Bukkit.getLogger().info("[CustomJobSync]   - Armures √©quip√©es: " + armorEquipped);
            Bukkit.getLogger().info("[CustomJobSync]   - Villageois fant√¥mes nettoy√©s: " + orphansRemoved);

            if (customJobVillagers > 0) {
                Bukkit.getServer().broadcastMessage(
                    org.bukkit.ChatColor.AQUA + "üîÑ Syst√®me de m√©tiers custom synchronis√© - " + 
                    org.bukkit.ChatColor.YELLOW + customJobVillagers + 
                    org.bukkit.ChatColor.WHITE + " employ√©s trouv√©s, " + 
                    org.bukkit.ChatColor.YELLOW + armorEquipped + 
                    org.bukkit.ChatColor.WHITE + " armures √©quip√©es."
                );
            }

        } catch (Exception e) {
            Bukkit.getLogger().severe("[CustomJobSync] Erreur critique lors de la synchronisation: " + e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * √âquipe l'armure d'un villageois sp√©cifique quand il obtient un m√©tier custom
     */
    public static void equipArmorOnJobAssignment(VillagerModel villager) {
        if (!villager.hasCustomJob()) {
            return;
        }

        try {
            Villager entity = (Villager) TestJava.plugin.getServer().getEntity(villager.getId());
            if (entity == null) {
                Bukkit.getLogger().warning("[CustomJobSync] Impossible d'√©quiper l'armure - villageois introuvable: " + villager.getId());
                return;
            }

            // Programmer l'√©quipement de l'armure avec un d√©lai pour s'assurer que l'entit√© est stable
            Bukkit.getScheduler().runTaskLater(TestJava.plugin, () -> {
                CustomJobArmorService.equipLeatherArmor(entity);
                villager.setHasLeatherArmor(true);
                VillagerRepository.update(villager);
                
                Bukkit.getLogger().info("[CustomJobSync] Armure √©quip√©e imm√©diatement pour nouveau employ√© " + 
                                       villager.getCurrentJobName() + " (villageois: " + villager.getId() + ")");
            }, 20L); // 1 seconde de d√©lai

        } catch (Exception e) {
            Bukkit.getLogger().warning("[CustomJobSync] Erreur √©quipement armure pour " + villager.getId() + ": " + e.getMessage());
        }
    }
}
